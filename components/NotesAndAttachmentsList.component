<apex:component layout="block" allowDML="true"
    controller="NotesAndAttachmentsListController">
    
    <apex:attribute name="interface" type="CloneableInterface" required="true"
                    assignTo="{!cloneableInterfaceObject}"
                    description="Interface object that contains methods for supporting the list." />
    
    <apex:attribute name="showAll" type="Boolean" required="false" default="false"
                    assignTo="{!showAllRecords}"
                    description="Indicates whether to show all records or a mini list of records (for embedding in pages)." />
    
    <apex:styleSheet value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/smoothness/jquery-ui.css" />
    <apex:stylesheet value="{!URLFOR($Resource.CustomResources, 'custom-styles.css')}" />
    
<!-- 
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js" />
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js" />
-->
 
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"/>
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js"/>

    <style>
    	.page-title {
    		display: block;
    		font-size: 1.8em;
    		padding: 5px 0px;
    	}
        
        .package-container {
            height: 265px;
            width: auto;
            float: none;
            padding: 10px 10px 15px 10px;
            overflow: hidden;
        }

        .packageable-item-container {
            height: 265px;
            width: auto;
            padding: 10px 10px 15px 10px;
            margin-bottom: 15px;
            overflow: hidden;
        }
        
        .dialog-form {
            font-size: 10px;
        }
        
        .filter-container {
            font-size: 10px;
        }
        
        .item-action {
            color: white !important;
        }
        
        .empty-list {
            color: black;
            background: #f8f8f8;
            border: 1px solid lightgray;
            padding: 5px;
        }
        
        .list-header {
        	display: inline;
        }
        
        .list-header-title {
        	float: left;
        	font-size: 1.4em;
        	font-weight: bold;
        	display: inline-block;
        	margin: 10px;
        	
        }
        
        .list-header-buttons {
        	float: right;
        	margin: 10px 15px;
        }
        
        .list-header-buttons input {
        	float: right;
        	margin: 0px 3px;
        }
        
    </style>
    
    <script>
        var $cloneToDialog,
            $j = jQuery.noConflict();
        
        jQuery(document).ready(function() {
            
            // Make case-insensitive
            $j.expr[":"].contains = $j.expr.createPseudo(function(value) {
                return function(el) {
                    return $j(el).text().toUpperCase().indexOf(value.toUpperCase()) >= 0;
                };
            });
            
            /* CLONE-TO DIALOG */
            $cloneToDialog = $j("#clone-to-dialog");
            $cloneToDialog.dialog({
                autoOpen: false,
                resizable: false,
                height: 707,
                width: 800,
                modal: true,
                buttons: {
                    "Clone": function() {
                        
                        // Get cloneable items list
                        var cloneableItemsList = [];
                        $j(".listitem-checkable:checked").each(function() {
                            var cloneableItemId = $j(this).data("id");
                            if (cloneableItemId != undefined && cloneableItemId != null && cloneableItemId != "") {
                                cloneableItemsList.push($j(this).data("id"));
                            }
                        });
                        
                        // Get clone-to items
                        var cloneToList = [];
                        $j(".package-container").find(".selectable > li").each(function() {
                            cloneToList.push($j(this).data("id"));
                        });
                        
                        // Check for selections
                        if (cloneToList.length == 0) {
                        	window.alert("Please select at least one item to clone to.");
                        	return false;
                        }
                        
                        $j(this).dialog("close");
                        
                        // Clone
                        doCloneItems(cloneableItemsList.join(","), cloneToList.join(","));
                    },
                    Cancel: function() {
                        $j(this).dialog("close");
                    }
                }
            });
            
            /* CONFIRM DIALOG */
            $confirmDeleteDialog = $j("#confirm-delete-dialog");
            $confirmDeleteDialog.dialog({
                autoOpen: false,
                resizable: false,
                height: 250,
                width: 325,
                modal: true,
                buttons: {
                    "Confirm": function() {
                        var deleteItemsList = [];
                        deleteItemsList.push($j(this).data("id"));
                        doDeleteItems(deleteItemsList.join(","));
                        $j(this).dialog("close");
                    },
                    Cancel: function() {
                        $j(this).dialog("close");
                    }
                }
            });
            
            initializeComponent();
        });
        
        /* Initialize event listeners and identifiers for the component  */
        initializeComponent = function() {

            // Attach click event to checkbox header column
            $j("#listitem-check-all").click(function() {
                affectCheckBoxes($j(".listitem-checkable"), $j(this).prop("checked"));
            });
            
            // Attach click event to NEW NOTE button
            $j("#NewNote").click(function() {
                var urlString = "/002/e?parent_id={!LEFT(parentObject.Id, 15)}&retURL=%2F{!URLENCODE(redirectUrl)}";
                navigateTo(urlString);
                return false;
            });
            
            // Attach click event to ATTTACH FILE button
            $j("#AttachFile").click(function() {
                var urlString = "/p/attach/NoteAttach?pid={!LEFT(parentObject.Id, 15)}&parentname={!URLENCODE(parentObjectName)}&retURL=%2F{!URLENCODE(redirectUrl)}";
                navigateTo(urlString);
                return false;
            });
            
            // Attach click event to VIEW ALL button
            $j("#ViewAll").click(function() {
                var urlString = "{!URLFOR($Page.NotesAndAttachments, null, [id=parentObject.Id, showAll='true'], true)}";
                navigateTo(urlString);
                return false;
            });
            
            // Attach click event to CLONE button
            $j("#MassClone").click(function() {
                
                // Check for selected items
                if ($j(".listitem-checkable:checked").length == 0) {
                    window.alert("Please select at least one item to clone.");
                    return false;
                }
                
                // Get the clone-to items
                doGetCloneToItems();
            });
            
            // Attach click event to RETURN-TO-SENDER button
            $j("#ReturnToSender").click(function() {
            	var urlString="/{!parentObject.Id}";
            	navigateTo(urlString);
            });
            // Attach click event to EDIT link
            $j(".action-edit").click(function() {
                var urlString = "/" + $j(this).data("id") + "/e?retURL=%2F{!URLENCODE(redirectUrl)}";
                navigateTo(urlString);
            });
            
            // Attach click event to VIEW links
            $j(".action-view").click(function() {
                var urlString = "https://c.cs9.content.force.com/servlet/servlet.FileDownload?file={!parentObject.Id}";
                navigateTo(urlString);
            });
            
            // Attach click event to DELETE links
            $j(".action-delete").click(function() {

                var itemId = $j(this).data("id");
                var itemName = $j(this).data("name");
                
                // Prompt user to confirm
                $confirmDeleteDialog.data("id", itemId);
                $confirmDeleteDialog.html(
                        '<p class="dialog-text">Are you sure you want to delete the item:'
                        + '<br/><br/><i>' + itemName + '</i></p>'); 
                $confirmDeleteDialog.dialog("open");
                $confirmDeleteDialog.dialog("option", "title", "Delete");
            });
            
            // Add selected item ADD actions to tagged elements
            $j(".add-action").click(function() {
                var $el = $j(this).parents(".packageable-item-container")[0];
                if ($el == null || $el == undefined) {
                    $el = $j(this).parents(".package-container")[0];
                }
                $j($el).find(".ui-selected")
                    .detach()
                    .removeClass("ui-selected")
                    .appendTo("#cloneToList");
                hidePackageMessage();
            });
            
            // Add selected item RESET actions to tagged elements
            $j(".reset-action").click(function() {
                var $el = $j(this).parents(".packageable-item-container")[0];
                if ($el == null || $el == undefined) { $el = $j(this).parents(".package-container")[0]; }
                $j($el).find(".ui-selected").removeClass("ui-selected");
            });
            
            // Add selected item REMOVE actions to tagged elements
            $j(".remove-action").click(function() {

                var $el = $j($j(this).parents(".package-container")[0]);
                var $selectedEl = $el.find(".ui-selected").detach();
                $j($selectedEl).removeClass("ui-selected");
                
                $j($selectedEl).each(function() {
                    var itemType = $j(this).data("item-type");
                    $j(this).appendTo("#" + itemType + "ItemList");
                });
                
                // Check for no more items in package
                if ($el.find(".selectable > li").length == 0) {
                    setPackageMessage(null);
                }
            });
            
            // Attach selectable event to all tagged elements
            $j(".selectable").selectable({ cancel: ".package-item-icon"});
        
            // Add search filtering
            $j(".filter-text").keyup(function() {
                var filterValue = $j(this).val();
                var $itemList = $j("#" + $j(this).data("list-name"));
                if (filterValue == null || filterValue == "") {
                    $j($itemList).children("li").show();
                } else {
                    $j($itemList).children("li:contains('" + filterValue + "')").show();
                    $j($itemList).children("li:not(:contains('" + filterValue + "'))").hide();
                }
            });
            
            // Add filter reset
            $j(".cancel-filter-action").click(function() {
                var $filterText = $j(this).prev(".filter-text");
                $filterText.val("");
                $j("#" + $filterText.data("list-name")).children("li:hidden").show();
            });
            
            // Add click event to toggle-check on columns
            $j(".listitem-column").click(function() {
                var $rowCheckbox = $j(this).parents("tr:eq(0)").find(".listitem-checkable:eq(0)");
                $rowCheckbox.prop("checked", !$rowCheckbox.prop("checked"));
            });
            
            // Initialize package meesage
            setPackageMessage();
        };
        
        /* Selects/Deselects checkboxes */
        affectCheckBoxes = function($checkboxes, checked) {
            $checkboxes.each(function() {
                $j(this).prop("checked", checked);
            });
        };
        
        /* Sets package message */
        setPackageMessage = function(message) {
            
            if (message == null || message == "") {
                message = '<p style="font-weight: bold;">No items have been selected to clone.</p>'
                            + '<p>To add items to clone, select the desired items from the list ' 
                            + 'above and then click the \'Add Selected\' button.</p>';
            }
            
            $j(".package-message").html(message).removeClass("error-message").show();
        };
        
        /* Hides package message */
        hidePackageMessage = function() {
            $j(".package-message").hide();
        };
        
        /* Build and display clone-to dialog */
        showCloneToDialog = function() {
            
            // Check for items to clone
            var cloneToItems = JSON.parse($j("#cloneToItems").val());
            var lineCount = cloneToItems.length;
            if (lineCount == 0) {
                window.alert('No {!LOWER(parentObjectName)} items found to for cloning activities.');
                return false;
            }
            
            // Clear clone-to list
            $j("#cloneToList").empty();
            
            var index = 0;
            var lineItems = [];
            while (index < lineCount) {
                var itemId = cloneToItems[index].Id;
                var itemName = cloneToItems[index].Name;
                var itemOwner = cloneToItems[index].OwnerId;
                var lineItem =
                      '<li class="ui-widget-content selectable-item opportunity-item" '
                    + 'data-item-type="cloneTo" '
                    + 'data-owner-id="' + itemOwner + '" '
                    + 'data-id="' + itemId.substr(0, 15) + '">' + itemName + '</li>';
                lineItems.push(lineItem);
                index++;
            }
            
            $j("#cloneToItemList").html(lineItems.join(""));
            
            // Show clone dialog
            $cloneToDialog.dialog("open");
            $cloneToDialog.dialog("option", "title", "Select {!parentObjectName} Records");
        };
        
        navigateTo = function(urlString) {
			if ({!showAll}) {
				window.location.href = urlString;
			} else {
				window.open(urlString, "_blank");
			}
        }; 
    </script>
    
    <apex:actionRegion >
        
        <apex:actionFunction name="doGetCloneToItems" action="{!getCloneToItems}"
            onComplete="showCloneToDialog(); return false;"
            rerender="FieldData" />
            
        <apex:actionFunction name="doDeleteItems" action="{!deleteItems}"
            onComplete="initializeComponent(); return false;" 
            rerender="NotesAndAttachmentsList">
            <apex:param name="deletedItemIdList" value="" />
        </apex:actionFunction>
        
        <apex:actionFunction name="doCloneItems" action="{!cloneItems}"
            onComplete="initializeComponent(); return false;" 
            rerender="NotesAndAttachmentsList">
            <apex:param name="cloneableItemIdList" value="" />
            <apex:param name="cloneToIdList" value="" />
        </apex:actionFunction>
            
    </apex:actionRegion>
    
    <apex:outputPanel id="FieldData" style="display: none;">
        <input type="hidden" id="cloneToItems" value="{!cloneToItemsJson}" />
    </apex:outputPanel>
    
    <apex:outputText value="{!parentObjectRecordName}" styleClass="page-title" rendered="{!showAll}" />
    
    <apex:pageBlock id="NotesAndAttachmentsList" title="Notes & Attachments">
        
        <apex:pageMessage strength="3" escape="false"
                severity="error" 
                title="{!pageError.Summary}"
                summary="{!pageError.Detail}"
                rendered="{!hasPageError}" />
    
    	<apex:facet name="header">
    		<div class="list-header">
	   			<div class="list-header-title">Notes &amp; Attachments</div>
	   			<div class="list-header-buttons">
		            <input type="button" id="ViewAll" value="View All" 
		                style="display: {!IF(AND(!hasPageError, !ISNULL(recordList), !showAll), 'inherit', 'none')};" />
		            <input type="button" id="ReturnToSender" value="Return to {!parentObjectName}"
		                title="Return to the {!LOWER(parentObjectName)} page"
		                style="display: {!IF(showAll, 'inherit', 'none')};" />
		            <input type="button" id="MassClone" value="Mass Clone" 
		                style="display: {!IF(AND(!hasPageError, !ISNULL(recordList), showAll), 'inherit', 'none')};" />
		            <input type="button" id="AttachFile" value="Attach File" />
		            <input type="button" id="NewNote" value="New Note" />
	   			</div>
    		</div>
        </apex:facet>
        
        <apex:pageBlockSection columns="1" showHeader="false" rendered="{!!hasPageError}">
            
            <apex:outputPanel layout="block" styleClass="empty-list" rendered="{!ISNULL(recordList)}">
                No records to display.
            </apex:outputPanel>
            
            <apex:pageBlockTable id="NotesAndAttachmentsTable" value="{!recordList}" var="record"
                    rendered="{!NOT(ISNULL(recordList))}">
                
                <apex:column style="width: 22px;" rendered="{!showAll}">
                    <apex:facet name="header">
                        <input type="checkbox" id="listitem-check-all" class="listitem-checkable" />
                    </apex:facet>
                    <input type="checkbox" class="listitem-checkable" 
                            data-id="{!record.Id}" />
                </apex:column>
                
                <apex:column styleClass="listitem-column" style="width: 100px;">
                    <apex:facet name="header">Action</apex:facet>
                    <a class="actionLink action-edit" href="#"
                            data-id="{!record.Id}">Edit</a>
                    |
                    <a class="actionLink action-view" href="#"
                            data-id="{!record.Id}"
                            style="display: {!IF(record.IsNote, 'none', 'inline')};">View</a>
                    {!IF(record.IsNote, '', '|')}
                    <a class="actionLink action-delete" href="#" onclick="return false;" 
                            data-id="{!record.Id}" 
                            data-name="{!record.Title}">Del</a>
                </apex:column>
                
                <apex:column styleClass="listitem-column" >
                    <apex:facet name="header">Type</apex:facet>
                    {!IF(record.IsNote, 'Note', 'Attachment')}
                </apex:column>
                
                <apex:column styleClass="listitem-column" >
                    <apex:facet name="header">Title</apex:facet>
                    <a href="/{!record.Id}">{!record.Title}</a>
                </apex:column>
                
                <apex:column styleClass="listitem-column" >
                    <apex:facet name="header">Last Modified</apex:facet>
                    <apex:outputField value="{!record.LastModifiedDate}" />
                </apex:column>
                
                <apex:column styleClass="listitem-column" >
                    <apex:facet name="header">Created By</apex:facet>
                    <a href="/{!record.CreatedById}">{!record.CreatedBy.Name}</a>
                </apex:column>
                
            </apex:pageBlockTable>
        </apex:pageBlockSection>
    </apex:pageBlock>
    
    <!-- --------------------------------------------------------------------------------------- -->
    <!-- DIALOGS                                                                                 -->
    <!-- --------------------------------------------------------------------------------------- -->
    
    <!-- CONFIRM DELETE DIALOG -->
    <div id="confirm-delete-dialog" class="confirm-dialog" style="display: none;">
    </div>
    
    <!-- CLONE-TO DIALOG -->
    <apex:outputPanel id="CloneToDialog">
        <div id="clone-to-dialog" class="dialog-form" style="display: none;">
    
            <div class="packageable-item-container">
                <div class="container-header">
                    <span class="container-header-text">{!parentObjectName} Items</span>
                    <div class="filter-container">
                        <input type="text" class="filter-text" data-list-name="cloneToItemList" placeholder=" { Search within list }" />
                        <a class="filter-action cancel-filter-action" href="#" onclick="return false;">&#10799;</a>
                    </div>
                </div>
                
                <div class="scrollable">
                    <ol id="cloneToItemList" class="selectable" />
                </div>
                
                <div class="item-action-container">
                    <a class="item-action add-action" href="#" onclick="return false;" title="Add selected items">&nbsp;&nbsp;Add Selected&nbsp;&nbsp;</a>
                    <a class="item-action reset-action" href="#" onclick="return false;" title="Clear all current selections">&nbsp;&nbsp;Clear Selections&nbsp;&nbsp;</a>
                </div>
            </div>
            
            <div class="package-container">
                <div class="container-header">
                    <span class="container-header-text">Clone-To List</span>
                    <div class="filter-container">
                        <input type="text" class="filter-text" data-list-name="cloneToList" placeholder=" { Search within list }" />
                        <a class="filter-action cancel-filter-action" href="#" onclick="return false;">&#10799;</a>
                    </div>
                </div>
                
                <div class="package-message" style="display: none;"/>
                
                <div class="scrollable">
                    <ol id="cloneToList" class="selectable">
                    </ol>
                </div>

                <div class="item-action-container">
                    <a class="item-action remove-action" href="#" 
                        onclick="return false;"
                        title="Remove selected items from package">&nbsp;&nbsp;Remove Selected&nbsp;&nbsp;</a>
                    <a class="item-action reset-action" href="#" 
                        onclick="return false;"
                        title="Clear all current selections">&nbsp;&nbsp;Clear Selections&nbsp;&nbsp;</a>
                </div>
            </div>
            
        </div>
    </apex:outputPanel>
</apex:component>